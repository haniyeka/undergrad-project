//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace my_pro.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class onlinebookstore : DbContext
    {
        public onlinebookstore()
            : base("name=onlinebookstore")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<AgeCategory> AgeCategories { get; set; }
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<BookImage> BookImages { get; set; }
        public virtual DbSet<BookMan> BookMans { get; set; }
        public virtual DbSet<BookMansProfession> BookMansProfessions { get; set; }
        public virtual DbSet<BookRate> BookRates { get; set; }
        public virtual DbSet<BookTag> BookTags { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Domain> Domains { get; set; }
        public virtual DbSet<Favorite> Favorites { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<InvoiceInfo> InvoiceInfoes { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<MemberType> MemberTypes { get; set; }
        public virtual DbSet<PayType> PayTypes { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<PersonSearchTag> PersonSearchTags { get; set; }
        public virtual DbSet<ProfessionType> ProfessionTypes { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<Publication> Publications { get; set; }
        public virtual DbSet<SellingInfo> SellingInfoes { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Viw_IfRepetitiveEmail> Viw_IfRepetitiveEmail { get; set; }
    
        public virtual int sp_AddAddress(string aline, string pocode, string cName, string country, string pName)
        {
            var alineParameter = aline != null ?
                new ObjectParameter("Aline", aline) :
                new ObjectParameter("Aline", typeof(string));
    
            var pocodeParameter = pocode != null ?
                new ObjectParameter("Pocode", pocode) :
                new ObjectParameter("Pocode", typeof(string));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("CName", cName) :
                new ObjectParameter("CName", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("PName", pName) :
                new ObjectParameter("PName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddAddress", alineParameter, pocodeParameter, cNameParameter, countryParameter, pNameParameter);
        }
    
        public virtual int sp_AddBook(string bTitle, string pyear, Nullable<int> pNumber, string descript, Nullable<long> number, Nullable<int> edition, string pname, string description)
        {
            var bTitleParameter = bTitle != null ?
                new ObjectParameter("BTitle", bTitle) :
                new ObjectParameter("BTitle", typeof(string));
    
            var pyearParameter = pyear != null ?
                new ObjectParameter("Pyear", pyear) :
                new ObjectParameter("Pyear", typeof(string));
    
            var pNumberParameter = pNumber.HasValue ?
                new ObjectParameter("PNumber", pNumber) :
                new ObjectParameter("PNumber", typeof(int));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("Descript", descript) :
                new ObjectParameter("Descript", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(long));
    
            var editionParameter = edition.HasValue ?
                new ObjectParameter("edition", edition) :
                new ObjectParameter("edition", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBook", bTitleParameter, pyearParameter, pNumberParameter, descriptParameter, numberParameter, editionParameter, pnameParameter, descriptionParameter);
        }
    
        public virtual int sp_AddBookImage(string bTitle, string path)
        {
            var bTitleParameter = bTitle != null ?
                new ObjectParameter("BTitle", bTitle) :
                new ObjectParameter("BTitle", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBookImage", bTitleParameter, pathParameter);
        }
    
        public virtual int sp_AddBookMans(Nullable<System.DateTime> wSince, string descript)
        {
            var wSinceParameter = wSince.HasValue ?
                new ObjectParameter("WSince", wSince) :
                new ObjectParameter("WSince", typeof(System.DateTime));
    
            var descriptParameter = descript != null ?
                new ObjectParameter("descript", descript) :
                new ObjectParameter("descript", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBookMans", wSinceParameter, descriptParameter);
        }
    
        public virtual int sp_AddBookMansProfession(Nullable<System.DateTime> since)
        {
            var sinceParameter = since.HasValue ?
                new ObjectParameter("Since", since) :
                new ObjectParameter("Since", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBookMansProfession", sinceParameter);
        }
    
        public virtual int sp_AddBookTag(string bTitle, string tagName)
        {
            var bTitleParameter = bTitle != null ?
                new ObjectParameter("BTitle", bTitle) :
                new ObjectParameter("BTitle", typeof(string));
    
            var tagNameParameter = tagName != null ?
                new ObjectParameter("TagName", tagName) :
                new ObjectParameter("TagName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBookTag", bTitleParameter, tagNameParameter);
        }
    
        public virtual int sp_AddBookType(string tname, string bTitle)
        {
            var tnameParameter = tname != null ?
                new ObjectParameter("tname", tname) :
                new ObjectParameter("tname", typeof(string));
    
            var bTitleParameter = bTitle != null ?
                new ObjectParameter("BTitle", bTitle) :
                new ObjectParameter("BTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddBookType", tnameParameter, bTitleParameter);
        }
    
        public virtual int sp_AddCity(string cname)
        {
            var cnameParameter = cname != null ?
                new ObjectParameter("Cname", cname) :
                new ObjectParameter("Cname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddCity", cnameParameter);
        }
    
        public virtual int sp_AddCountry(string coname)
        {
            var conameParameter = coname != null ?
                new ObjectParameter("Coname", coname) :
                new ObjectParameter("Coname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddCountry", conameParameter);
        }
    
        public virtual int sp_AddDomain(string dname)
        {
            var dnameParameter = dname != null ?
                new ObjectParameter("Dname", dname) :
                new ObjectParameter("Dname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddDomain", dnameParameter);
        }
    
        public virtual int sp_AddImage(string tName, Nullable<System.DateTime> upDate, string pathAddress)
        {
            var tNameParameter = tName != null ?
                new ObjectParameter("TName", tName) :
                new ObjectParameter("TName", typeof(string));
    
            var upDateParameter = upDate.HasValue ?
                new ObjectParameter("UpDate", upDate) :
                new ObjectParameter("UpDate", typeof(System.DateTime));
    
            var pathAddressParameter = pathAddress != null ?
                new ObjectParameter("PathAddress", pathAddress) :
                new ObjectParameter("PathAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddImage", tNameParameter, upDateParameter, pathAddressParameter);
        }
    
        public virtual int sp_AddPerson(string fname, string lname, Nullable<System.DateTime> birthDate, string gender, string postalCode, string path, string uID, string dID)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var uIDParameter = uID != null ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(string));
    
            var dIDParameter = dID != null ?
                new ObjectParameter("DID", dID) :
                new ObjectParameter("DID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddPerson", fnameParameter, lnameParameter, birthDateParameter, genderParameter, postalCodeParameter, pathParameter, uIDParameter, dIDParameter);
        }
    
        public virtual int sp_AddPhone(string pNumber)
        {
            var pNumberParameter = pNumber != null ?
                new ObjectParameter("PNumber", pNumber) :
                new ObjectParameter("PNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddPhone", pNumberParameter);
        }
    
        public virtual int sp_AddPhoneType(byte[] pTName)
        {
            var pTNameParameter = pTName != null ?
                new ObjectParameter("PTName", pTName) :
                new ObjectParameter("PTName", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddPhoneType", pTNameParameter);
        }
    
        public virtual int sp_AddProfessionType(byte[] pTypeName, string des)
        {
            var pTypeNameParameter = pTypeName != null ?
                new ObjectParameter("PTypeName", pTypeName) :
                new ObjectParameter("PTypeName", typeof(byte[]));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddProfessionType", pTypeNameParameter, desParameter);
        }
    
        public virtual int sp_AddProvince(string pname)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddProvince", pnameParameter);
        }
    
        public virtual int sp_Addpublicatio(string pname, string description)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Addpublicatio", pnameParameter, descriptionParameter);
        }
    
        public virtual int sp_AddTag(string tName, Nullable<long> pId)
        {
            var tNameParameter = tName != null ?
                new ObjectParameter("TName", tName) :
                new ObjectParameter("TName", typeof(string));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddTag", tNameParameter, pIdParameter);
        }
    
        public virtual int sp_AddTypes(string tName)
        {
            var tNameParameter = tName != null ?
                new ObjectParameter("TName", tName) :
                new ObjectParameter("TName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddTypes", tNameParameter);
        }
    
        public virtual int sp_AddUserName(string usName)
        {
            var usNameParameter = usName != null ?
                new ObjectParameter("UsName", usName) :
                new ObjectParameter("UsName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddUserName", usNameParameter);
        }
    
        public virtual int sp_deletbook(Nullable<long> bookID)
        {
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbook", bookIDParameter);
        }
    
        public virtual int sp_deletbookImage(Nullable<long> bookImageID)
        {
            var bookImageIDParameter = bookImageID.HasValue ?
                new ObjectParameter("BookImageID", bookImageID) :
                new ObjectParameter("BookImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbookImage", bookImageIDParameter);
        }
    
        public virtual int sp_deletbookMans(Nullable<long> bookMansID)
        {
            var bookMansIDParameter = bookMansID.HasValue ?
                new ObjectParameter("BookMansID", bookMansID) :
                new ObjectParameter("BookMansID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbookMans", bookMansIDParameter);
        }
    
        public virtual int sp_deletbookMansProfession(Nullable<long> bookMansProfessionID)
        {
            var bookMansProfessionIDParameter = bookMansProfessionID.HasValue ?
                new ObjectParameter("BookMansProfessionID", bookMansProfessionID) :
                new ObjectParameter("BookMansProfessionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbookMansProfession", bookMansProfessionIDParameter);
        }
    
        public virtual int sp_deletbookTag(Nullable<long> bookTagID)
        {
            var bookTagIDParameter = bookTagID.HasValue ?
                new ObjectParameter("BookTagID", bookTagID) :
                new ObjectParameter("BookTagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbookTag", bookTagIDParameter);
        }
    
        public virtual int sp_deletbookType(Nullable<long> bookTypeID)
        {
            var bookTypeIDParameter = bookTypeID.HasValue ?
                new ObjectParameter("BookTypeID", bookTypeID) :
                new ObjectParameter("BookTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletbookType", bookTypeIDParameter);
        }
    
        public virtual int sp_deleteCity(Nullable<long> cityID)
        {
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteCity", cityIDParameter);
        }
    
        public virtual int sp_deleteCountry(Nullable<long> countyID)
        {
            var countyIDParameter = countyID.HasValue ?
                new ObjectParameter("CountyID", countyID) :
                new ObjectParameter("CountyID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteCountry", countyIDParameter);
        }
    
        public virtual int sp_deleteDomain(Nullable<long> domainID)
        {
            var domainIDParameter = domainID.HasValue ?
                new ObjectParameter("DomainID", domainID) :
                new ObjectParameter("DomainID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteDomain", domainIDParameter);
        }
    
        public virtual int sp_deleteImage(Nullable<long> imageID)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteImage", imageIDParameter);
        }
    
        public virtual int sp_deleteMember(Nullable<long> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteMember", memberIDParameter);
        }
    
        public virtual int sp_deleteMemberTypeID(Nullable<long> memberTypeID)
        {
            var memberTypeIDParameter = memberTypeID.HasValue ?
                new ObjectParameter("MemberTypeID", memberTypeID) :
                new ObjectParameter("MemberTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteMemberTypeID", memberTypeIDParameter);
        }
    
        public virtual int sp_deletePerson(Nullable<long> personID)
        {
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePerson", personIDParameter);
        }
    
        public virtual int sp_deletePersonSearchTag(Nullable<long> personSerachTag)
        {
            var personSerachTagParameter = personSerachTag.HasValue ?
                new ObjectParameter("PersonSerachTag", personSerachTag) :
                new ObjectParameter("PersonSerachTag", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePersonSearchTag", personSerachTagParameter);
        }
    
        public virtual int sp_deletePhone(Nullable<long> phoneID)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePhone", phoneIDParameter);
        }
    
        public virtual int sp_deleteProfessionType(Nullable<long> professionTypeID)
        {
            var professionTypeIDParameter = professionTypeID.HasValue ?
                new ObjectParameter("ProfessionTypeID", professionTypeID) :
                new ObjectParameter("ProfessionTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteProfessionType", professionTypeIDParameter);
        }
    
        public virtual int sp_deleteProvince(Nullable<long> provinceID)
        {
            var provinceIDParameter = provinceID.HasValue ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteProvince", provinceIDParameter);
        }
    
        public virtual int sp_deletePublicationID(Nullable<long> publicationID)
        {
            var publicationIDParameter = publicationID.HasValue ?
                new ObjectParameter("PublicationID", publicationID) :
                new ObjectParameter("PublicationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deletePublicationID", publicationIDParameter);
        }
    
        public virtual int sp_deleteTag(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteTag", tagIDParameter);
        }
    
        public virtual int sp_deleteType(Nullable<long> typeID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteType", typeIDParameter);
        }
    
        public virtual int sp_deleteUser(Nullable<long> uSerID)
        {
            var uSerIDParameter = uSerID.HasValue ?
                new ObjectParameter("USerID", uSerID) :
                new ObjectParameter("USerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteUser", uSerIDParameter);
        }
    
        public virtual int sp_UpdateAddress(string addressLine, string postalcode, Nullable<long> addressID)
        {
            var addressLineParameter = addressLine != null ?
                new ObjectParameter("AddressLine", addressLine) :
                new ObjectParameter("AddressLine", typeof(string));
    
            var postalcodeParameter = postalcode != null ?
                new ObjectParameter("postalcode", postalcode) :
                new ObjectParameter("postalcode", typeof(string));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateAddress", addressLineParameter, postalcodeParameter, addressIDParameter);
        }
    
        public virtual int sp_UpdateBook(string bookTitle, string publicationyear, Nullable<int> printNumber, string description, Nullable<long> numberof, Nullable<int> edition, Nullable<long> bookID)
        {
            var bookTitleParameter = bookTitle != null ?
                new ObjectParameter("BookTitle", bookTitle) :
                new ObjectParameter("BookTitle", typeof(string));
    
            var publicationyearParameter = publicationyear != null ?
                new ObjectParameter("publicationyear", publicationyear) :
                new ObjectParameter("publicationyear", typeof(string));
    
            var printNumberParameter = printNumber.HasValue ?
                new ObjectParameter("PrintNumber", printNumber) :
                new ObjectParameter("PrintNumber", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var numberofParameter = numberof.HasValue ?
                new ObjectParameter("numberof", numberof) :
                new ObjectParameter("numberof", typeof(long));
    
            var editionParameter = edition.HasValue ?
                new ObjectParameter("edition", edition) :
                new ObjectParameter("edition", typeof(int));
    
            var bookIDParameter = bookID.HasValue ?
                new ObjectParameter("BookID", bookID) :
                new ObjectParameter("BookID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBook", bookTitleParameter, publicationyearParameter, printNumberParameter, descriptionParameter, numberofParameter, editionParameter, bookIDParameter);
        }
    
        public virtual int sp_UpdateBookMans(Nullable<System.DateTime> worksince, string description, Nullable<long> personID)
        {
            var worksinceParameter = worksince.HasValue ?
                new ObjectParameter("Worksince", worksince) :
                new ObjectParameter("Worksince", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBookMans", worksinceParameter, descriptionParameter, personIDParameter);
        }
    
        public virtual int sp_UpdateCity(string cityName, Nullable<long> cityID)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCity", cityNameParameter, cityIDParameter);
        }
    
        public virtual int sp_UpdateCountry(string countryName, Nullable<long> countryID)
        {
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCountry", countryNameParameter, countryIDParameter);
        }
    
        public virtual int sp_UpdateDomain(string domainName, Nullable<long> domainID)
        {
            var domainNameParameter = domainName != null ?
                new ObjectParameter("DomainName", domainName) :
                new ObjectParameter("DomainName", typeof(string));
    
            var domainIDParameter = domainID.HasValue ?
                new ObjectParameter("DomainID", domainID) :
                new ObjectParameter("DomainID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateDomain", domainNameParameter, domainIDParameter);
        }
    
        public virtual int sp_UpdateImage(string temporaryName, Nullable<System.DateTime> uploaddate, string path, Nullable<long> imageID)
        {
            var temporaryNameParameter = temporaryName != null ?
                new ObjectParameter("TemporaryName", temporaryName) :
                new ObjectParameter("TemporaryName", typeof(string));
    
            var uploaddateParameter = uploaddate.HasValue ?
                new ObjectParameter("Uploaddate", uploaddate) :
                new ObjectParameter("Uploaddate", typeof(System.DateTime));
    
            var pathParameter = path != null ?
                new ObjectParameter("Path", path) :
                new ObjectParameter("Path", typeof(string));
    
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateImage", temporaryNameParameter, uploaddateParameter, pathParameter, imageIDParameter);
        }
    
        public virtual int sp_UpdateMember(byte[] passSalt, Nullable<System.DateTime> joinDate, byte[] pathhash, string userName, Nullable<long> memberID)
        {
            var passSaltParameter = passSalt != null ?
                new ObjectParameter("PassSalt", passSalt) :
                new ObjectParameter("PassSalt", typeof(byte[]));
    
            var joinDateParameter = joinDate.HasValue ?
                new ObjectParameter("JoinDate", joinDate) :
                new ObjectParameter("JoinDate", typeof(System.DateTime));
    
            var pathhashParameter = pathhash != null ?
                new ObjectParameter("Pathhash", pathhash) :
                new ObjectParameter("Pathhash", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateMember", passSaltParameter, joinDateParameter, pathhashParameter, userNameParameter, memberIDParameter);
        }
    
        public virtual int sp_UpdatePerson(string fName, string lName, Nullable<System.DateTime> birthDate, string gender, Nullable<long> personID)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("birthDate", birthDate) :
                new ObjectParameter("birthDate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var personIDParameter = personID.HasValue ?
                new ObjectParameter("PersonID", personID) :
                new ObjectParameter("PersonID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePerson", fNameParameter, lNameParameter, birthDateParameter, genderParameter, personIDParameter);
        }
    
        public virtual int sp_UpdatePhone(string phoneNumber, Nullable<long> phoneID)
        {
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePhone", phoneNumberParameter, phoneIDParameter);
        }
    
        public virtual int sp_UpdateProfessionType(string professionTypeName, string description, Nullable<long> professionTypeID)
        {
            var professionTypeNameParameter = professionTypeName != null ?
                new ObjectParameter("ProfessionTypeName", professionTypeName) :
                new ObjectParameter("ProfessionTypeName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var professionTypeIDParameter = professionTypeID.HasValue ?
                new ObjectParameter("ProfessionTypeID", professionTypeID) :
                new ObjectParameter("ProfessionTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProfessionType", professionTypeNameParameter, descriptionParameter, professionTypeIDParameter);
        }
    
        public virtual int sp_UpdateProvince(string provinceName, Nullable<long> provinceID)
        {
            var provinceNameParameter = provinceName != null ?
                new ObjectParameter("ProvinceName", provinceName) :
                new ObjectParameter("ProvinceName", typeof(string));
    
            var provinceIDParameter = provinceID.HasValue ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProvince", provinceNameParameter, provinceIDParameter);
        }
    
        public virtual int sp_UpdatePulcati(string publicationName, string description, Nullable<long> publicationID)
        {
            var publicationNameParameter = publicationName != null ?
                new ObjectParameter("PublicationName", publicationName) :
                new ObjectParameter("PublicationName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var publicationIDParameter = publicationID.HasValue ?
                new ObjectParameter("PublicationID", publicationID) :
                new ObjectParameter("PublicationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePulcati", publicationNameParameter, descriptionParameter, publicationIDParameter);
        }
    
        public virtual int sp_UpdateTypes(string typeName, Nullable<long> typeID)
        {
            var typeNameParameter = typeName != null ?
                new ObjectParameter("TypeName", typeName) :
                new ObjectParameter("TypeName", typeof(string));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTypes", typeNameParameter, typeIDParameter);
        }
    
        public virtual int sp_UpdateUser(string userName, Nullable<long> userID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUser", userNameParameter, userIDParameter);
        }
    }
}
